regout_short = lm(logQ ~ logPr+dummy1+dummy2)
print(summary(regout_short))
coef(regout_full)
coef(regout_short)
coef(regout_full)
coef(regout_short)
coef(regout_full)
coef(regout_short)
plot(x=quality, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Quality Index",
xlab="Quality Index", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(quality),col="dark blue",lty="dotted")
cor(logPr,quality)
coef(regout_full)
coef(regout_short)
plot(x=quality, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Quality Index",
xlab="Quality Index", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(quality),col="dark blue",lty="dotted")
cor(logPr,quality)
coef(regout_short)
coef(regout_full)
var(quality)
regout_short$residuals
cor(regout_short$residuals,logPr)
plot(regout_short$residuals,logPr)
plot(regout_short$residuals,logQ)
plot(logQ,regout_short$residuals)
logPr = u1 +  u2
quality = u3/2 + u2 + u1
logQ= trueB[1] + trueB[2]*logPr + trueB[3]*dummy1 + trueB[4]*dummy2 + trueB[5]*quality + err
logPr = u1 +  u2
quality = u3/2 + u2 + u1
logQ= trueB[1] + trueB[2]*logPr + trueB[3]*dummy1 + trueB[4]*dummy2 + trueB[5]*quality + err
regout_full = lm(logQ ~ logPr+dummy1+dummy2+quality)
regout_short = lm(logQ ~ logPr+dummy1+dummy2)
cor(regout_full)
cor(logQ,logPr)
regout_full$coefficients
logPr = u1 +  u2
quality = u3/2 + u2 + u1
logQ= trueB[1] + trueB[2]*logPr + trueB[3]*dummy1 + trueB[4]*dummy2 + trueB[5]*quality + err
regout_full = lm(logQ ~ logPr+dummy1+dummy2+quality)
regout_short = lm(logQ ~ logPr+dummy1+dummy2)
regout_full$coefficients
regout_short$coefficients
cor(logPr,quality)
regout_full$coefficients
logPr = u1 +  u2
quality = u3/2 + u2 + u1
logQ= trueB[1] + trueB[2]*logPr + trueB[3]*dummy1 + trueB[4]*dummy2 + trueB[5]*quality + err
regout_full = lm(logQ ~ logPr+dummy1+dummy2+quality)
regout_short = lm(logQ ~ logPr+dummy1+dummy2)
cor(logPr,quality)
regout_full$coefficients
regout_short$coefficients
cor(logQ,regout_short$residuals)
plot(logQ,regout_short$residuals)
logPr2 = u1 +  u2
quality2 = u3/2 + u2 + u1
logQ2= trueB[1] + trueB[2]*logPr + trueB[3]*dummy1 + trueB[4]*dummy2 + trueB[5]*quality + err
regout_full2 = lm(logQ ~ logPr+dummy1+dummy2+quality)
regout_short2 = lm(logQ ~ logPr+dummy1+dummy2)
cor(logPr,quality)
regout_full$coefficients
regout_short$coefficients
logPr2 = u1 +  u2
quality2 = u3/2 + u2 + u1
logQ2= trueB[1] + trueB[2]*logPr + trueB[3]*dummy1 + trueB[4]*dummy2 + trueB[5]*quality + err
regout_full2 = lm(logQ ~ logPr+dummy1+dummy2+quality)
regout_short2 = lm(logQ ~ logPr+dummy1+dummy2)
cor(logPr,quality)
regout_full2$coefficients
regout_short2$coefficients
cor(logQ,regout_short$residuals)
plot(logQ,regout_short$residuals)
knitr::opts_chunk$set(message = F, warning =  F)
set.seed(20)
n = 5000  # number of observation
trueB = c(3,-3, 1.5, 0.7, 3)
err = rnorm(n,sd=3)  # error term simulation
u1 = runif(n)
u2 = runif(n)
u3 = runif(n)
u4 = runif(n)
logPr = u1 +  u2
quality = u3 + u2
dummy1 = (u4> 0.7)*1.0
dummy2 = ((u4<0.7)&(u4>0.3))*1.0
logQ= trueB[1] + trueB[2]*logPr + trueB[3]*dummy1 + trueB[4]*dummy2 + trueB[5]*quality + err
summary(cbind(logQ,logPr, dummy1, dummy2,quality))
par(mfrow = c(2,2))
plot(x=logPr, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. log(Price)",
xlab="log(Price)", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(logPr),col="dark blue",lty="dotted")
plot(x=dummy1, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Yellow Dummy",
xlab="Yellow Dummy", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(dummy1),col="dark blue",lty="dotted")
plot(x=dummy2, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Green Dummy",
xlab="Green  Dummy", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(dummy2),col="dark blue",lty="dotted")
plot(x=quality, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Quality Index",
xlab="Quality Index", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(quality),col="dark blue",lty="dotted")
library(knitr)
corrout = cor(cbind(logQ,logPr, dummy1, dummy2,quality))
kable(round(corrout,digits=4))
regout_full = lm(logQ ~ logPr+dummy1+dummy2+quality)
print(summary(regout_full))
regout_short = lm(logQ ~ logPr+dummy1+dummy2)
print(summary(regout_short))
coef(regout_full)
coef(regout_short)
plot(x=quality, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Quality Index",
xlab="Quality Index", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(quality),col="dark blue",lty="dotted")
cor(logPr,quality)
cor(logQ,regout_short$residuals)
plot(logQ,regout_short$residuals)
cor(logQ,regout_short$residuals)
barplot(regout_short$residuals)
barplot(error)
cor(logQ,regout_short$residuals)
barplot(regout_short$residuals)
barplot(err)
plot(logQ,regout_short$residuals)
plot(regout_short$residuals)
plot(err)
bar(err)
barplot(err)
qqplot(err)
qqnorm(err)
qqnorm(regout_short$residuals)
qqnorm(regout_short$residuals)
qqnorm(err)
qqnorm(regout_short$residuals)
predict(regout_short)
logQhat = predict(regout_short)
plot(logQhat,regout_short$residuals)
plot(logQ,regout_short$residuals)
plot(logQ,err)
plot(logQ,regout_short$residuals)
plot(logQ,err)
cov(regout_short$residuals,logPr)
plot(logPr)
var(logPr)
n = 100  # number of observation
trueB = c(3,-3, 1.5, 0.7, 3)
err = rnorm(n,sd=3)  # error term simulation
u1 = runif(n)
u2 = runif(n)
u3 = runif(n)
u4 = runif(n)
logPr = u1 +  u2
quality = u3 + u2
dummy1 = (u4> 0.7)*1.0
dummy2 = ((u4<0.7)&(u4>0.3))*1.0
logQ= trueB[1] + trueB[2]*logPr + trueB[3]*dummy1 + trueB[4]*dummy2 + trueB[5]*quality + err
summary(cbind(logQ,logPr, dummy1, dummy2,quality))
par(mfrow = c(2,2))
plot(x=logPr, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. log(Price)",
xlab="log(Price)", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(logPr),col="dark blue",lty="dotted")
plot(x=dummy1, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Yellow Dummy",
xlab="Yellow Dummy", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(dummy1),col="dark blue",lty="dotted")
plot(x=dummy2, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Green Dummy",
xlab="Green  Dummy", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(dummy2),col="dark blue",lty="dotted")
plot(x=quality, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Quality Index",
xlab="Quality Index", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(quality),col="dark blue",lty="dotted")
library(knitr)
corrout = cor(cbind(logQ,logPr, dummy1, dummy2,quality))
kable(round(corrout,digits=4))
regout_full = lm(logQ ~ logPr+dummy1+dummy2+quality)
print(summary(regout_full))
regout_short = lm(logQ ~ logPr+dummy1+dummy2)
print(summary(regout_short))
vif(regout_short)
vif(regout_full)
n = 10  # number of observation
trueB = c(3,-3, 1.5, 0.7, 3)
err = rnorm(n,sd=3)  # error term simulation
u2 = runif(n)
u4 = runif(n)
logPr = u1 +  u2
dummy1 = (u4> 0.7)*1.0
dummy2 = ((u4<0.7)&(u4>0.3))*1.0
logQ= trueB[1] + trueB[2]*logPr + trueB[3]*dummy1 + trueB[4]*dummy2 + trueB[5]*quality + err
summary(cbind(logQ,logPr, dummy1, dummy2,quality))
regout_full = lm(logQ ~ logPr+dummy1+dummy2+quality)
knitr::opts_chunk$set(message = F, warning =  F)
set.seed(20)
n = 10  # number of observation
trueB = c(3,-3, 1.5, 0.7, 3)
err = rnorm(n,sd=3)  # error term simulation
u1 = runif(n)
u2 = runif(n)
u3 = runif(n)
u4 = runif(n)
logPr = u1 +  u2
quality = u3 + u2
dummy1 = (u4> 0.7)*1.0
dummy2 = ((u4<0.7)&(u4>0.3))*1.0
logQ= trueB[1] + trueB[2]*logPr + trueB[3]*dummy1 + trueB[4]*dummy2 + trueB[5]*quality + err
summary(cbind(logQ,logPr, dummy1, dummy2,quality))
var(logPr)
par(mfrow = c(2,2))
plot(x=logPr, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. log(Price)",
xlab="log(Price)", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(logPr),col="dark blue",lty="dotted")
plot(x=dummy1, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Yellow Dummy",
xlab="Yellow Dummy", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(dummy1),col="dark blue",lty="dotted")
plot(x=dummy2, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Green Dummy",
xlab="Green  Dummy", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(dummy2),col="dark blue",lty="dotted")
plot(x=quality, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Quality Index",
xlab="Quality Index", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(quality),col="dark blue",lty="dotted")
library(knitr)
corrout = cor(cbind(logQ,logPr, dummy1, dummy2,quality))
kable(round(corrout,digits=4))
regout_full = lm(logQ ~ logPr+dummy1+dummy2+quality)
vif(regout_full)
print(summary(regout_full))
knitr::opts_chunk$set(message = F, warning =  F)
set.seed(20)
n = 5000  # number of observation
trueB = c(3,-3, 1.5, 0.7, 3)
err = rnorm(n,sd=3)  # error term simulation
u1 = runif(n)
u2 = runif(n)
u3 = runif(n)
u4 = runif(n)
logPr = u1 +  u2
quality = u3 + u2
dummy1 = (u4> 0.7)*1.0
dummy2 = ((u4<0.7)&(u4>0.3))*1.0
logQ= trueB[1] + trueB[2]*logPr + trueB[3]*dummy1 + trueB[4]*dummy2 + trueB[5]*quality + err
summary(cbind(logQ,logPr, dummy1, dummy2,quality))
var(logPr)
par(mfrow = c(2,2))
plot(x=logPr, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. log(Price)",
xlab="log(Price)", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(logPr),col="dark blue",lty="dotted")
plot(x=dummy1, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Yellow Dummy",
xlab="Yellow Dummy", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(dummy1),col="dark blue",lty="dotted")
plot(x=dummy2, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Green Dummy",
xlab="Green  Dummy", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(dummy2),col="dark blue",lty="dotted")
plot(x=quality, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Quality Index",
xlab="Quality Index", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(quality),col="dark blue",lty="dotted")
regout_full = lm(logQ ~ logPr+dummy1+dummy2+quality)
print(summary(regout_full))
plot(x=quality, y=logPr, col="blue", main="Correlation: \n log(Sales) vs. Quality Index",
xlab="Quality Index", ylab = "log(Sales)", pch=16)
coef(regout_full)
coef(regout_short)
plot(x=quality, y=logPr, col="blue", main="Correlation: \n log(Sales) vs. Quality Index",
xlab="Quality Index", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(quality),col="dark blue",lty="dotted")
cor(logPr,quality)
knitr::opts_chunk$set(message = F, warning =  F)
set.seed(20)
n = 5000  # number of observation
trueB = c(3,-3, 1.5, 0.7, 3)
err = rnorm(n,sd=3)  # error term simulation
u1 = runif(n)
u2 = runif(n)
u3 = runif(n)
u4 = runif(n)
logPr = u1 +  u2
quality = u3 + u2
dummy1 = (u4> 0.7)*1.0
dummy2 = ((u4<0.7)&(u4>0.3))*1.0
logQ= trueB[1] + trueB[2]*logPr + trueB[3]*dummy1 + trueB[4]*dummy2 + trueB[5]*quality + err
summary(cbind(logQ,logPr, dummy1, dummy2,quality))
par(mfrow = c(2,2))
plot(x=logPr, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. log(Price)",
xlab="log(Price)", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(logPr),col="dark blue",lty="dotted")
plot(x=dummy1, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Yellow Dummy",
xlab="Yellow Dummy", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(dummy1),col="dark blue",lty="dotted")
plot(x=dummy2, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Green Dummy",
xlab="Green  Dummy", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(dummy2),col="dark blue",lty="dotted")
plot(x=quality, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Quality Index",
xlab="Quality Index", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(quality),col="dark blue",lty="dotted")
library(knitr)
corrout = cor(cbind(logQ,logPr, dummy1, dummy2,quality))
kable(round(corrout,digits=4))
E[\hat\delta] = \beta_1 + (X_1'X)^{-1}X_1'X_2\beta_2
knitr::opts_chunk$set(message = F, warning =  F)
set.seed(20)
n = 5000  # number of observation
trueB = c(3,-3, 1.5, 0.7, 3)
err = rnorm(n,sd=3)  # error term simulation
u1 = runif(n)
u2 = runif(n)
u3 = runif(n)
u4 = runif(n)
logPr = u1 +  u2
quality = u3 + u2
dummy1 = (u4> 0.7)*1.0
dummy2 = ((u4<0.7)&(u4>0.3))*1.0
logQ= trueB[1] + trueB[2]*logPr + trueB[3]*dummy1 + trueB[4]*dummy2 + trueB[5]*quality + err
summary(cbind(logQ,logPr, dummy1, dummy2,quality))
par(mfrow = c(2,2))
plot(x=logPr, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. log(Price)",
xlab="log(Price)", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(logPr),col="dark blue",lty="dotted")
plot(x=dummy1, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Yellow Dummy",
xlab="Yellow Dummy", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(dummy1),col="dark blue",lty="dotted")
plot(x=dummy2, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Green Dummy",
xlab="Green  Dummy", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(dummy2),col="dark blue",lty="dotted")
plot(x=quality, y=logQ, col="blue", main="Correlation: \n log(Sales) vs. Quality Index",
xlab="Quality Index", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(quality),col="dark blue",lty="dotted")
library(knitr)
corrout = cor(cbind(logQ,logPr, dummy1, dummy2,quality))
kable(round(corrout,digits=4))
regout_full = lm(logQ ~ logPr+dummy1+dummy2+quality)
print(summary(regout_full))
regout_short = lm(logQ ~ logPr+dummy1+dummy2)
print(summary(regout_short))
coef(regout_full)
coef(regout_short)
plot(x=quality, y=logPr, col="blue", main="Correlation: \n log(Sales) vs. Quality Index",
xlab="Quality Index", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(quality),col="dark blue",lty="dotted")
cor(logPr,quality)
cor(quality,regout_short$residuals)
cor(quality,regout_full$residuals)
cor(quality,regout_short$residuals)
cor(quality,regout_full$residuals)
cor(logPr,regout_short$residuals)
cor(logPr,regout_full$residuals)
cor(logPr,regout_short$residuals)
cor(logPr,regout_full$residuals)
cor(logPr,regout_short$residuals)
cor(logPr,regout_full$residuals)
cor(logPr,regout_full$residuals)
cor(logPr,regout_short$residuals)
cor(logPr,regout_full$residuals)
cor(logPr,regout_short$residuals)
cor(logPr,regout_full$residuals)
egout_short$residuals
regout_short$residuals
coef(regout_full)
coef(regout_short)
plot(x=quality, y=logPr, col="blue", main="Correlation: \n log(Sales) vs. Quality Index",
xlab="Quality Index", ylab = "log(Sales)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(quality),col="dark blue",lty="dotted")
cor(logPr,quality)
coef(regout_full)
coef(regout_short)
plot(x=quality, y=logPr, col="blue", main="Correlation: \n log(Price) vs. Quality Index",
xlab="Quality Index", ylab = "log(Price)", pch=16)
abline(h=mean(logQ),col="dark blue",lty="dotted")
abline(v=mean(quality),col="dark blue",lty="dotted")
cor(logPr,quality)
vif(regout_full)
library(car)
vif(regout_full)
set.seed(20)
n = 5000  # number of observation
trueB = c(3,-3, 1.5, 0.7, 3)
err = rnorm(n,sd=3)  # error term simulation
u1 = runif(n)
u2 = runif(n)
u3 = runif(n)
u4 = runif(n)
logPr = u1 +  u2
quality = u3
dummy1 = (u4> 0.7)*1.0
dummy2 = ((u4<0.7)&(u4>0.3))*1.0
logQ= trueB[1] + trueB[2]*logPr + trueB[3]*dummy1 + trueB[4]*dummy2 + trueB[5]*quality + err
summary(cbind(logQ,logPr, dummy1, dummy2,quality))
regout_full = lm(logQ ~ logPr+dummy1+dummy2+quality)
print(summary(regout_full))
regout_short = lm(logQ ~ logPr+dummy1+dummy2)
print(summary(regout_short))
library(knitr)
corrout = cor(cbind(logQ,logPr, dummy1, dummy2,quality))
kable(round(corrout,digits=4))
regout_short = lm(logQ ~ logPr+dummy1+dummy2)
print(summary(regout_short))
exp(1.56)
exp(1.56)
exp(0.72)
exp(1.56)-1
exp(0.72)-1
library(knitr)
corrout = cor(cbind(logQ,logPr, dummy1, dummy2,quality))
print(kable(round(corrout,digits=4)))
tri = sum(4,3,1,4,4,4,3,4,1,1,3,3,2,2,4)
reg = sum(2,4,2,3,3,2,4,2,4,4,4,2,4,4,2)
star = sum(1,1,3,2,1,1,2,3,2,3,2,1,1,2,1)
cir = sum(3,2,4,1,2,3,1,1,3,2,1,4,3,3,3)
tri = sum(4,3,1,4,4,4,3,4,1,1,3,3,2,2,4)
reg = sum(2,4,2,3,3,2,4,2,4,4,4,2,4,4,2)
star = sum(1,1,3,2,1,1,2,3,2,3,2,1,1,2,1)
cir = sum(3,2,4,1,2,3,1,1,3,2,1,4,3,3,3)
tri = sum(4,3,1,4,4,4,3,4,1,1,3,3,2,2,4)
reg = sum(2,4,2,3,3,3,4,2,4,4,4,2,4,4,2)
sta = sum(1,1,3,2,1,1,2,3,2,3,2,1,1,2,1)
cir = sum(3,2,4,1,2,2,1,1,3,2,1,4,3,3,3)
tri = sum(4,3,1,4,4,4,3,4,1,1,3,3,2,2,4)
reg = sum(2,4,2,3,3,3,4,2,4,4,4,2,4,4,2)
sta = sum(1,1,3,2,1,1,2,3,2,3,2,1,1,2,1)
cir = sum(3,2,4,1,2,2,1,1,3,2,1,4,3,3,3)
tri = sum(4,3,1,4,4,4,3,4,1,1,3,3,2,1,4)
reg = sum(2,4,2,3,3,3,4,2,4,4,4,2,4,4,2)
sta = sum(1,1,3,2,1,1,2,3,2,3,2,1,1,2,1)
cir = sum(3,2,4,1,2,2,1,1,3,2,1,4,3,3,3)
rm(list=ls());gc()
setwd("C:/Users/renz/Desktop/4MAT")
test = read.csv("test.csv", header = T)
test = na.omit(test)
names(test)
rownames(test) = test[,"이름"]
test = test[,-1]
rm(list=ls());gc()
setwd("C:/Users/renz/Desktop/4MAT")
test = read.csv("test.csv", header = T)
test = na.omit(test)
setwd("C:/Users/renz/Desktop/4MAT 클러스터링")
test = read.csv("test.csv", header = T)
test = na.omit(test)
names(test)
rownames(test) = test[,"이름"]
test = test[,-1]
scale.test = scale(test[,-c(6,7)])
team = test$팀
sex = test$X
dist.E = dist(scale.test)
cluster.EC = hclust(dist.E)
plot(cluster.EC, main="Euclidean, complete", cex=1)
rect.hclust(cluster.EC, k=4, border="red")
cluster.EA = hclust(dist.E, method="average")
rect.hclust(cluster.EA, k=4, border="red")
plot(cluster.EA, main="Euclidean, average")
# K-means
library(cluster)
set.seed(1)
cluster.K4 = kmeans(scale.test, centers= 4, nstart = 50)
cluster.K4$cluster
table(cluster.K4$cluster)
#--- 다차원 척도법을 이용한 군집분석 시각화(p.81)
k1 = 4
cmds = cmdscale(dist.E, k = 2)
groups = cutree(cluster.EC, k=k1)
plot(cmds, xlab = "coord 1", ylab = "coord 2", main = "MDS-hclust", type = "n")
text(cmds, labels = rownames(cmds), cex=.8, col=groups)
plot(cmds, xlab = "coord 1", ylab = "coord 2", main = "MDS-kmeans", type = "n")
text(cmds, labels = rownames(cmds), cex=.8, col=cluster.K4$cluster)
plot(cmds, xlab = "coord 1", ylab = "coord 2", main = "MDS-team", type = "n")
text(cmds, labels = rownames(cmds), cex=.8, col=team)
plot(cmds, xlab = "coord 1", ylab = "coord 2", main = "MDS-team", type = "n")
text(cmds, labels = rownames(cmds), cex=.8, col=sex)
pca <- princomp(scale.test, cor=T)
groups = cutree(cluster.EC, k=k1)
plot(pca$scores[,1:2], xlab = "coord 1", ylab = "coord 2", main = "PCA-hclust", type = "n")
text(pca$scores[,1:2], labels = rownames(pca$scores), cex=.8, col=groups)
plot(pca$scores[,1:2], xlab = "coord 1", ylab = "coord 2", main = "PCA-kmeans", type = "n")
text(pca$scores[,1:2], labels = rownames(pca$scores), cex=.8, col=cluster.K4$cluster)
plot(pca$scores[,1:2], xlab = "coord 1", ylab = "coord 2", main = "PCA-team", type = "n")
text(pca$scores[,1:2], labels = rownames(cmds), cex=.8, col=team)
groups = cluster.K4$cluster
for (i in 1:4){
cat(i,'- th cluster \n')
tmp = rbind(round(colMeans(test[,-6][which(groups==i),]), 3),
round(diag(cov(test[,-6][which(groups==i),])), 3)); rownames(tmp) = c("Mean","Var")
print(tmp)
}
table(groups)
